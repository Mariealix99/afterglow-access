@use '@angular/material' as mat;
@import "@angular/material/theming";
@import "./app-theme";


@include mat.core();

@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';



//Define a light theme.
$light-primary: mat.define-palette(mat.$indigo-palette, 600, 400, 800);
$light-accent: mat.define-palette(mat.$deep-orange-palette);
$light-warn: mat.define-palette(mat.$red-palette);
$light-theme: mat.define-light-theme($light-primary, $light-accent, $light-warn);
@include mat.all-component-themes($light-theme);
@include afterglow-app-theme($light-theme);

// Define a dark theme.
$dark-primary: mat.define-palette(mat.$cyan-palette, 500, 400, 700);
$dark-accent: mat.define-palette(mat.$orange-palette);
$dark-warn: mat.define-palette(mat.$red-palette);
$dark-theme: mat.define-dark-theme($dark-primary, $dark-accent, $dark-warn);

.cyan-dark-theme {
  @include mat.all-component-themes($dark-theme);
  @include afterglow-app-theme($dark-theme);

  app-navbar {
    .navbar,
    .navbar-header {
      background: mat.get-color-from-palette(mat.$grey-palette, 700);
    }

    .mat-button,
    .mat-icon-button {
      $foreground: map-get($dark-theme, foreground);
      color: mat.get-color-from-palette($foreground, text);
    }
  }
}

// Define a dark high contrast theme.
$dark-hc-primary: mat.define-palette(mat.$yellow-palette, 500, 400, 600);
$dark-hc-text: mat.get-color-from-palette(mat.$yellow-palette, 500);
$dark-hc-disabled-text: mat.get-color-from-palette(mat.$yellow-palette, 700);
$dark-hc-icons: mat.get-color-from-palette(mat.$yellow-palette, 400);
$dark-hc-accent: mat.define-palette(mat.$yellow-palette, 600);
$dark-hc-theme: mat.define-dark-theme($dark-hc-primary, $dark-hc-accent, $dark-warn);
$foreground: map-get($dark-hc-theme, foreground);
// @debug $foreground;
$foreground: map_merge(
  $foreground,
  (
    text: $dark-hc-text,
    "secondary-text": $dark-hc-text,
    icon: $dark-hc-icons,
  )
);

$background: map-get($dark-hc-theme, background);
// @debug $foreground;
$background: map_merge($background, ());

$dark-hc-theme: map_merge(
  $dark-hc-theme,
  (
    foreground: $foreground,
    background: $background,
  )
);

.high-contrast-theme {
  @include mat.all-component-themes($dark-hc-theme);
  @include afterglow-app-theme($dark-hc-theme);

  .mat-button,
  .mat-icon-button {
    color: mat.get-color-from-palette($foreground, text);
  }

  app-navbar {
    .navbar,
    .navbar-header {
      background: mat.get-color-from-palette($background, background);
    }

    a.mat-button,
    a.mat-icon-button,
    .mat-button,
    .mat-icon-button {
      color: mat.get-color-from-palette($foreground, text);
    }
  }

  theme-picker {
    .mat-button,
    .mat-icon-button {
      color: mat.get-color-from-palette($foreground, text);
    }
  }
}

$fa-font-path: "~font-awesome/fonts";
@import "~font-awesome/scss/font-awesome";
.icon-user {
  @extend .fa;
  @extend .fa-user;
}

@import url("https://fonts.googleapis.com/css?family=Roboto&display=swap");
$custom-typography: mat.define-typography-config(
  $font-family: "Roboto",
);
@include mat.all-component-typographies($custom-typography);

body {
  font-family: Roboto, Arial, sans-serif;
}

.mono {
  // font-family: 'Anonymous Pro', monospace;
  font-family: "Roboto Mono", monospace;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0px;
  padding: 0px;
}

th {
  font-weight: 500;
}


/** User theme/accessibility settings */
.large {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell {
    font-size: 1.25em;
  }
  .mat-slide-toggle {
    line-height: normal;
  }
}

.largest {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell {
    font-size: 1.5em;
  }
  .mat-slide-toggle {
    line-height: normal;
  }
}


.bold {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell {
    font-weight: bold;
  }
}

.boldest {
  label, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6, th, td, p, span, input, button, a, th, td, .mat-cell {
    font-weight: bolder;
  }
}



.data-provider-menu {
  max-width: 350px !important;
}

.action-menu {
  max-width: 450px !important;
}

.fx-workbench-outlet {
  height: 100%;
  width: 100%;
  min-height: 100%;
  min-width: 100%;
  display: flex;
  flex: 1 1 0%;
  outline: none;
  flex-direction: row;
}

/* fix bootstrap underlining and applying color to button font */
a.mat-button {
  color: inherit;
  text-decoration: none;
}

/* fix margin beneath mat-button-toggle */
label.mat-button-toggle-label {
  margin-bottom: 0px;
}

/* fix bootstrap margin bottom on labels */
.mat-checkbox label {
  margin-bottom: 0px;
}

.no-axis-labels .tick text,
.no-axis-labels .nv-axisMaxMin text {
  display: none;
}

.td-data-table-cell-content-wrapper {
  padding: 0px 5px 0px 5px !important;
}

.data-file-tool-tip {
  background-color: rgba(35, 35, 35, 255);
  font-size: 12px;
}

.file-path-tooltip {
  max-width: 400px !important;
  background: rgba(97, 97, 97, 1) !important;
  font-size: 12px !important;
}

.viewer-panel .mat-tab-label .mat-tab-label-content {
  width: 100%;
}

#example10positionSelector {
  margin-top: 1em;
}

/* Angular Material Tabs Full Height in Workbench View Manager */

.mat-tab-group.mat-tab-fill-height .mat-tab-body-wrapper {
  flex: 1 1 100%;
}

/* Important.  Prevents central view manager from pushing tool panel to the right. */
/* This allows the mat-tabs to overflow with scrolling */
.workbench-outlet-panel .image-viewer-grid-panel {
  min-width: 250px;
}

/* Data Provider File Manager */
.dx-drawer-panel-content.dx-drawer-panel-content-initial {
  display: none !important;
}

/* Photometry Data Tooltips */
.photometry-data-tooltip {
  white-space: pre !important;
}

/* Force Material Dialogs to position relative to top of window */
.cdk-global-overlay-wrapper {
  align-items: start !important;
  padding: 100px;
}

// .mat-dialog-content {
//   overflow: unset !important;
// }

.h-full {
  height: 100%;
}

.w-full {
  width: 100%;
}




/** the following are temporarily needed now that bootstrap has been removed */
.h-100 {
  height: 100%;
}

.w-100 {
  width: 100%;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
}

.card-header {
  padding: 0.75rem 1.25rem;
  margin-bottom: 0;
  border-bottom: 1px solid rgba(0,0,0,.125);
  letter-spacing: normal;
  
  h2 {
    margin: 0px;
  }
}

.card-body {
  flex: 1 1 auto;
    min-height: 1px;
    padding: 1.25rem;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 1rem;

  th,
  td {
    padding: 0.75rem;
    vertical-align: top;
    border-top: 1px solid #dee2e6;
  }

  thead th {
    vertical-align: bottom;
    border-bottom: 2px solid #dee2e6;
  }

  tbody + tbody {
    border-top: 2px solid #dee2e6;
  }
}

.alert-success {
  color: #155724;
  background-color: #d4edda;
  border-color: #c3e6cb;
}
.alert-danger {
  color: #721c24;
  background-color: #f8d7da;
  border-color: #f5c6cb;
}
.alert-warning {
  color: #856404;
  background-color: #fff3cd;
  border-color: #ffeeba;
}

.alert-info {
  color: #0c5460;
  background-color: #d1ecf1;
  border-color: #bee5eb;
}
.alert {
  position: relative;
  padding: 0.75rem 1.25rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: 0.25rem;
}

/** end bootstrap polyfill */